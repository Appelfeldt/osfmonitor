name: release-draft

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  create-release-draft:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.2'

    - name: Install requirements for raylib-go
      run: sudo apt-get install libgl1-mesa-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev libwayland-dev libxkbcommon-dev mingw-w64
        
    - name: Build windows
      run: go build -o bin/win/ -ldflags "-X 'github.com/Appelfeldt/osfmonitor/cmd.BuildVersion=${{ github.ref_name }}'" -v ./...
      env:
        CGO_ENABLED: 1
        GOOS: windows
        GOARCH: amd64
        CC: x86_64-w64-mingw32-gcc

    - name: Archive windows
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'osfmonitor-win-amd64.zip'
        directory: bin/win/
        
    # For debugging
    # - name: Setup tmate session
    #   if: failure()
    #   uses: mxschmitt/action-tmate@v3

    - name: Build linux-amd64
      run: go build -o bin/linux-amd64/ -ldflags "-X 'github.com/Appelfeldt/osfmonitor/cmd.BuildVersion=${{ github.ref_name }}'" -v ./...
      env:
        CGO_ENABLED: 1
        GOOS: linux
        GOARCH: amd64
      
    - name: Archive linux-amd64
      uses: thedoctor0/zip-release@0.7.5
      with:
        type: 'zip'
        filename: 'osfmonitor-linux-amd64.zip'
        directory: bin/linux-amd64/
        
    # - name: release
    #   uses: actions/create-release@v1
    #   id: create_release
    #   with:
    #     draft: true
    #     prerelease: false
    #     release_name: ${{ github.ref_name }}
    #     tag_name: ${{ github.ref }}
    #     body_path: CHANGELOG.md
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: release
      run: |
        gh release create "${{ github.ref }}" ./bin/*/*.zip \
          --title "${{ github.ref_name }}" \
          -F CHANGELOG.md \
          --draft
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: upload windows artifact
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: bin/win/osfmonitor-win-amd64.zip
    #     asset_name: osfmonitor-win-amd64.zip
    #     asset_content_type: application/zip

    # - name: upload linux-amd64 artifact
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: bin/linux-amd64/osfmonitor-linux-amd64.zip
    #     asset_name: osfmonitor-linux-amd64.zip
    #     asset_content_type: application/zip